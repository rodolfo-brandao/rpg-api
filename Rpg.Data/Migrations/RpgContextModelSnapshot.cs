// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rpg.Data.Context;

#nullable disable

namespace Rpg.Data.Migrations
{
    [DbContext(typeof(RpgContext))]
    partial class RpgContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("Rpg.Core.Models.Character", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<ushort>("Dexterity")
                        .HasColumnType("tinyint");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<ushort>("Intelligence")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<int>("MainClass")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<ushort>("Strength")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<ushort>("Vitality")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Character", (string)null);
                });

            modelBuilder.Entity("Rpg.Core.Models.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("char(32)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("char(24)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Player", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e95d6bdb-42f8-4fd8-87a1-eea8168b5573"),
                            CreatedAt = new DateTime(2022, 6, 11, 21, 18, 51, 832, DateTimeKind.Utc).AddTicks(9637),
                            Email = "gman@blackmesa.com",
                            IsDisabled = false,
                            Password = "83a6c7696be667964f0f42ac17f7fe93",
                            PasswordSalt = "c0695027b298c139700d002f",
                            Role = 0,
                            Username = "gman"
                        },
                        new
                        {
                            Id = new Guid("9b003b60-6fd3-46bb-9d5f-a2527e780ec6"),
                            CreatedAt = new DateTime(2022, 6, 11, 21, 18, 51, 832, DateTimeKind.Utc).AddTicks(9644),
                            Email = "gordon.freeman@blackmesa.com",
                            IsDisabled = false,
                            Password = "83a6c7696be667964f0f42ac17f7fe93",
                            PasswordSalt = "c0695027b298c139700d002f",
                            Role = 1,
                            Username = "freeman"
                        });
                });

            modelBuilder.Entity("Rpg.Core.Models.Character", b =>
                {
                    b.HasOne("Rpg.Core.Models.Player", "Player")
                        .WithMany("Characters")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Rpg.Core.Models.Player", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
